package game.game_objects;

import org.newdawn.slick.opengl.Texture;

import game.game_objects.blocks.BlockLava;
import managers.Sounds;
import utilities.*;

import java.util.ArrayList;

public abstract class Entity extends VisibleObject {
	
	protected boolean isJumping, isMoving, isFalling, reverseAnim;
	protected Animator animator;
	
	protected int lives;
	
	public Texture selectAnimationFrame() {
		return animator.animFrame(isMoving, reverseAnim);
	}
	
	public abstract void render();
	
	public void update() {
		x += xVelocity;
		y += yVelocity;
		animator.update();
	}
	
	protected void handleAnimations() {
		if ((xVelocity != 0 || yVelocity != 0) && !isMoving) {
			animator.resetFrames();
			isMoving = true; 
		}
		else if (xVelocity == 0 && yVelocity == 0 && isMoving) { isMoving = false; }
	}
	
	protected void handleSounds() {
		if (yVelocity == 0 && xVelocity != 0 && !isJumping && !isFalling && !Sounds.walk.isPlaying()) {
			Sounds.play(Sounds.walk, AudioType.SFX);
		} 
	}
	
	public boolean touchingY(VisibleObject ob) {
		return (this.y > ob.y && this.y < ob.y + ob.height) || (ob.y >= this.y && ob.y < this.y + this.height);
	}
	
	public boolean touchingX(VisibleObject ob) {
		return (this.x > ob.x && this.x < ob.x + ob.width) || (ob.x >= this.x && ob.x < this.x + this.width);
	}
	
	public void collideStop(ArrayList<VisibleObject> collidables) {
		for(VisibleObject ob : collidables) {
			if(xVelocity > 0 && this.touchingY(ob)) {
				int rightDiff = this.x + this.width - ob.x;
				if(rightDiff >= 0 && rightDiff < 5) {
					xVelocity = 0;
					if(this.x + this.width > ob.x) {
						this.x = ob.x - this.width;
					}
				}
			}
			if(xVelocity < 0 && this.touchingY(ob)) {
				int leftDiff = ob.x + ob.width - this.x;
				if(leftDiff >= 0 && leftDiff < 5) {
					xVelocity = 0;
					if(leftDiff > 0) {
						this.x = ob.x + ob.width;
					}
				}
			}
			if(yVelocity > 0 && this.touchingX(ob)) {
				int bottomDif = this.y + this.height - ob.y;
				if(bottomDif >= 0 && bottomDif < ob.height) {
					yVelocity = 0;
					if (isJumping || isFalling) {
						if (!(ob instanceof BlockLava)) { Sounds.play(Sounds.landOnBlock, AudioType.SFX); }
						else { /* TODO play burning sound */ }
					}
					isJumping = false;
					isFalling = false;
					if(bottomDif > 0) {
						this.y = ob.y - this.height;
					}
				}
			} 
			if(yVelocity < 0 && this.touchingX(ob)) {
				int topDif = ob.y + ob.height - this.y;
				if(topDif >= 0 && topDif < 5) {
					yVelocity = 0;
					if(topDif > 0) {
						this.y = ob.y + ob.height;
					}
				}
			}
		}
	}
	
	public void jump() {
		this.isJumping = true;
		this.yVelocity = Constants.JUMP_VELOCITY;
		Sounds.play(Sounds.jump, AudioType.SFX);
	}
	
	public Entity(int x, int y, double playeranimationfps) {
		super(x, y);
		this.width = 64;
		this.height = 128;
		animator = new Animator(playeranimationfps);
	}
	
	/* public boolean moveBy(int x, int y, ArrayList<VisibleObject> collidable) {
		return true;
	} */
	
	// getters/setters
	public int getLives() { return lives; }
	public void setLives(int lives) { this.lives = lives; }
}
