package ui;

import org.lwjgl.input.Mouse;
import org.lwjgl.openal.AL;
import org.lwjgl.opengl.Display;
import org.newdawn.slick.opengl.Texture;

import game.game_objects.VisibleObject;
import managers.GameManager;
import managers.Sounds;
import managers.Textures;
import utilities.*;

public class Button extends VisibleObject {

	protected Texture[] buttonTextures;
	protected Texture buttonTexture;
	protected int sceneChangeIndex;
	
	protected boolean canPlayHoverSound, clickTransition;
	protected Cooldown clickCooldown;
	
	public Button(int x, int y, int width, int height, Texture[] textures, int sceneChangeIndex) {
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
		buttonTextures = textures;
		buttonTexture = buttonTextures[0];
		this.sceneChangeIndex = sceneChangeIndex;
	}
	
	public void setup() {
		canPlayHoverSound = true;
		clickTransition = false;
		clickCooldown = null;
	}
	
	public void update() {
		checkMouseOverAndClick();
		if (clickTransition) { 
			System.out.println("Click cooldown has been updating!");
			clickCooldown.update();
			buttonClickTransition(); 
		}
	}

	public void render() {
		Textures.render(buttonTexture, x, y, width, height);
	}
	
	protected void checkMouseOverAndClick() {
		int mouseX = Mouse.getX(), mouseY = Constants.GAME_HEIGHT-Mouse.getY();
		if (mouseX >= x && mouseX <= x + width && mouseY >= y && mouseY <= y + height) {
			if (canPlayHoverSound) { 
				Sounds.play(Sounds.hover, AudioType.SFX); 
				canPlayHoverSound = false;
			}
			buttonTexture = buttonTextures[1];
			
			if (Mouse.isButtonDown(0) && !clickTransition) {
				Sounds.play(Sounds.click, AudioType.SFX);
				clickCooldown = new Cooldown(Constants.BUTTONCLICKCOOLDOWN)
				clickCooldown.reset();
				System.out.print("Click cooldown has been reset! ");
				clickCooldown.printInfo();
				clickTransition = true;
			}
		} else {
			canPlayHoverSound = true;
			buttonTexture = buttonTextures[0];
		}
	}
	
	private void buttonClickTransition() {
		clickCooldown.printInfo();
		if (clickCooldown.isCooldownCompleted()) {
			System.out.print("Click cooldown has been completed! ");
			clickCooldown.printInfo();
			
			if (sceneChangeIndex != -1) { GameManager.RunScene(sceneChangeIndex); } 
			else { 
				Display.destroy();
			    AL.destroy();
				System.exit(0); 
			}  
			clickTransition = false;
		}
	}
}
